# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'rvos.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QLabel, QPushButton, QRadioButton, QMenuBar, QMenu, QMainWindow


class Ui_RvosWindow(QMainWindow):
    def see_film(self):
        os.system('python videowindow.py')

    def setupUi(self, RvosWindow):
        RvosWindow.setObjectName("RvosWindow")
        RvosWindow.resize(600, 700)
        RvosWindow.setMinimumSize(600, 700)
        RvosWindow.setMaximumSize(600, 700)
        RvosWindow.setWindowTitle("RVOS segmentation")
        RvosWindow.setWindowIcon(QIcon('ivf.png'))

        self.centralwidget = QtWidgets.QWidget(RvosWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Upload video

        self.upload_video_button = QPushButton("Upload video", self.centralwidget)
        self.upload_video_button.setGeometry(30, 60, 121, 41)
        self.upload_video_button.setObjectName("upload_video")
        self.upload_video_label = QLabel("1. Upload video", self.centralwidget)
        self.upload_video_label.setGeometry(30, 30, 141, 16)
        self.upload_video_label.setObjectName("upload_video_label")

        # Segmentation method
        self.segmentation_method = QLabel("3. Choose segmentation method", self.centralwidget)
        self.segmentation_method.setGeometry(30, 130, 201, 21)
        self.segmentation_method.setObjectName("segmentation_method")
        self.radio_oneshot = QRadioButton("one shot", self.centralwidget)
        self.radio_oneshot.setGeometry(30, 170, 82, 17)
        self.radio_oneshot.setObjectName("radio_oneshot")
        self.radio_zeroshot = QRadioButton("zero shot", self.centralwidget)
        self.radio_zeroshot.setGeometry(30, 200, 82, 17)
        self.radio_zeroshot.setObjectName("radio_zeroshot")

        # If one shot: upload initial mask
        self.init_mask_label = QLabel("3. IF ONE SHOT: Upload initial mask", self.centralwidget)
        self.init_mask_label.setGeometry(30, 240, 201, 21)
        self.init_mask_label.setObjectName("init_mask_label")
        self.init_mask_button = QPushButton("Upload initial mask", self.centralwidget)
        self.init_mask_button.setGeometry(30, 270, 121, 41)
        self.init_mask_button.setObjectName("init_mask_button")

        # 4. Upload fames
        self.frames_label = QLabel("4. Upload frames", self.centralwidget)
        self.frames_label.setGeometry(30, 330, 201, 21)
        self.frames_label.setObjectName("frames_label")
        self.frames_button = QPushButton("Upload frames", self.centralwidget)
        self.frames_button.setGeometry(30, 360, 121, 41)
        self.frames_button.setObjectName("frames_button")

        # Upload model
        self.upload_model_label = QLabel("5. Upload model", self.centralwidget)
        self.upload_model_label.setGeometry(30, 430, 201, 21)
        self.upload_model_label.setObjectName("upload_model_label")
        self.upload_model_button = QPushButton("Upload model", self.centralwidget)
        self.upload_model_button.setGeometry(30, 460, 121, 41)
        self.upload_model_button.setObjectName("upload_model")

        self.set_results_label = QLabel("6. Set results path", self.centralwidget)
        self.set_results_label.setGeometry(30, 520, 201, 21)
        self.set_results_label.setObjectName("set_results_label")
        self.set_results_button = QPushButton("Set results path", self.centralwidget)
        self.set_results_button.setGeometry(30, 540, 121, 41)
        self.set_results_button.setObjectName("set_results_button")

        # Run segmentation
        self.run_segmentation = QPushButton("Run segmentation", self.centralwidget)
        self.run_segmentation.setGeometry(390, 180, 121, 41)
        self.run_segmentation.setObjectName("run_segmentation")

        # Visualisation
        self.visualisation = QPushButton("Visualisation", self.centralwidget)
        self.visualisation.setGeometry(390, 250, 121, 41)
        self.visualisation.setObjectName("visualisation")
        self.visualisation.clicked.connect(self.see_film)

        # Menu bar
        self.menubar = QMenuBar(RvosWindow)
        self.menubar.setGeometry(0, 0, 677, 21)
        self.menubar.setObjectName("menubar")

        # Menu help
        self.menuHelp = QMenu("Help", self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menubar.addAction(self.menuHelp.menuAction())
        RvosWindow.setMenuBar(self.menubar)

        # Status bar
        # self.statusbar = QtWidgets.QStatusBar(RvosWindow)
        # self.statusbar.setObjectName("statusbar")
        # RvosWindow.setStatusBar(self.statusbar)

        RvosWindow.setCentralWidget(self.centralwidget)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    RvosWindow = QtWidgets.QMainWindow()
    ui = Ui_RvosWindow()
    ui.setupUi(RvosWindow)
    RvosWindow.show()
    sys.exit(app.exec_())
